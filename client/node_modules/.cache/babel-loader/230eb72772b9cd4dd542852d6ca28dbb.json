{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\"; // TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps, fillFieldNames } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\nvar MAX_RETRY_TIMES = 10;\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(_args));\n    _this.destroyed = false;\n    _this.delayedDragEnterLogic = void 0;\n    _this.loadingRetryTimes = {};\n    _this.state = {\n      keyEntities: {},\n      indent: null,\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      draggingNodeKey: null,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null,\n      fieldNames: fillFieldNames()\n    };\n    _this.dragStartMousePosition = null;\n    _this.dragNode = void 0;\n    _this.currentMouseOverDroppableNodeKey = null;\n    _this.listRef = /*#__PURE__*/React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      _this.dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n      _this.setState({\n        draggingNodeKey: eventKey,\n        dragChildrenKeys: getDragChildrenKeys(eventKey, keyEntities),\n        indent: _this.listRef.current.getIndentWidth()\n      });\n\n      _this.setExpandedKeys(newExpandedKeys);\n\n      window.addEventListener('dragend', _this.onWindowDragEnd);\n      onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n    };\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragChildrenKeys = _this$state2.dragChildrenKeys,\n          flattenNodes = _this$state2.flattenNodes,\n          indent = _this$state2.indent;\n      var _this$props = _this.props,\n          onDragEnter = _this$props.onDragEnter,\n          onExpand = _this$props.onExpand,\n          allowDrop = _this$props.allowDrop,\n          direction = _this$props.direction;\n      var _node$props = node.props,\n          pos = _node$props.pos,\n          eventKey = _node$props.eventKey;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize.dragNode; // record the key of node which is latest entered, used in dragleave event.\n\n\n      if (_this.currentMouseOverDroppableNodeKey !== eventKey) {\n        _this.currentMouseOverDroppableNodeKey = eventKey;\n      }\n\n      if (!dragNode) {\n        _this.resetDragState();\n\n        return;\n      }\n\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition.dropPosition,\n          dropLevelOffset = _calcDropPosition.dropLevelOffset,\n          dropTargetKey = _calcDropPosition.dropTargetKey,\n          dropContainerKey = _calcDropPosition.dropContainerKey,\n          dropTargetPos = _calcDropPosition.dropTargetPos,\n          dropAllowed = _calcDropPosition.dropAllowed,\n          dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n\n      if ( // don't allow drop inside its children\n      dragChildrenKeys.indexOf(dropTargetKey) !== -1 || // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        _this.resetDragState();\n\n        return;\n      } // Side effect for delay drag\n\n\n      if (!_this.delayedDragEnterLogic) {\n        _this.delayedDragEnterLogic = {};\n      }\n\n      Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(_this.delayedDragEnterLogic[key]);\n      });\n\n      if (dragNode.props.eventKey !== node.props.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        event.persist();\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (_this.state.draggingNodeKey === null) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[node.props.eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, node.props.eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n\n          onExpand === null || onExpand === void 0 ? void 0 : onExpand(newExpandedKeys, {\n            node: convertNodePropsToEventData(node.props),\n            expanded: true,\n            nativeEvent: event.nativeEvent\n          });\n        }, 800);\n      } // Skip if drag node is self\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        _this.resetDragState();\n\n        return;\n      } // Update drag over node and drag state\n\n\n      _this.setState({\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n\n      onDragEnter === null || onDragEnter === void 0 ? void 0 : onDragEnter({\n        event: event,\n        node: convertNodePropsToEventData(node.props),\n        expandedKeys: expandedKeys\n      });\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var _this$state3 = _this.state,\n          dragChildrenKeys = _this$state3.dragChildrenKeys,\n          flattenNodes = _this$state3.flattenNodes,\n          keyEntities = _this$state3.keyEntities,\n          expandedKeys = _this$state3.expandedKeys,\n          indent = _this$state3.indent;\n      var _this$props2 = _this.props,\n          onDragOver = _this$props2.onDragOver,\n          allowDrop = _this$props2.allowDrop,\n          direction = _this$props2.direction;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize2.dragNode;\n\n      if (!dragNode) {\n        return;\n      }\n\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition2.dropPosition,\n          dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n          dropTargetKey = _calcDropPosition2.dropTargetKey,\n          dropContainerKey = _calcDropPosition2.dropContainerKey,\n          dropAllowed = _calcDropPosition2.dropAllowed,\n          dropTargetPos = _calcDropPosition2.dropTargetPos,\n          dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n\n      if (dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      } // Update drag position\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(_this.state.dropPosition === null && _this.state.dropLevelOffset === null && _this.state.dropTargetKey === null && _this.state.dropContainerKey === null && _this.state.dropTargetPos === null && _this.state.dropAllowed === false && _this.state.dragOverNodeKey === null)) {\n          _this.resetDragState();\n        }\n      } else if (!(dropPosition === _this.state.dropPosition && dropLevelOffset === _this.state.dropLevelOffset && dropTargetKey === _this.state.dropTargetKey && dropContainerKey === _this.state.dropContainerKey && dropTargetPos === _this.state.dropTargetPos && dropAllowed === _this.state.dropAllowed && dragOverNodeKey === _this.state.dragOverNodeKey)) {\n        _this.setState({\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n\n      onDragOver === null || onDragOver === void 0 ? void 0 : onDragOver({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      // if it is outside the droppable area\n      // currentMouseOverDroppableNodeKey will be updated in dragenter event when into another droppable receiver.\n      if (_this.currentMouseOverDroppableNodeKey === node.props.eventKey && !event.currentTarget.contains(event.relatedTarget)) {\n        _this.resetDragState();\n\n        _this.currentMouseOverDroppableNodeKey = null;\n      }\n\n      var onDragLeave = _this.props.onDragLeave;\n      onDragLeave === null || onDragLeave === void 0 ? void 0 : onDragLeave({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n    };\n\n    _this.onWindowDragEnd = function (event) {\n      _this.onNodeDragEnd(event, null, true);\n\n      window.removeEventListener('dragend', _this.onWindowDragEnd);\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$getActiveItem;\n\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _this$state4 = _this.state,\n          dragChildrenKeys = _this$state4.dragChildrenKeys,\n          dropPosition = _this$state4.dropPosition,\n          dropTargetKey = _this$state4.dropTargetKey,\n          dropTargetPos = _this$state4.dropTargetPos,\n          dropAllowed = _this$state4.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = _this.props.onDrop;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (dropTargetKey === null) return;\n\n      var abstractDropNodeProps = _objectSpread(_objectSpread({}, getTreeNodeProps(dropTargetKey, _this.getTreeNodeRequiredProps())), {}, {\n        active: ((_this$getActiveItem = _this.getActiveItem()) === null || _this$getActiveItem === void 0 ? void 0 : _this$getActiveItem.key) === dropTargetKey,\n        data: _this.state.keyEntities[dropTargetKey].node\n      });\n\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. This is a bug of rc-tree. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: [_this.dragNode.props.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n\n      if (!outsideTree) {\n        onDrop === null || onDrop === void 0 ? void 0 : onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var draggingNodeKey = _this.state.draggingNodeKey;\n\n      if (draggingNodeKey !== null) {\n        _this.setState({\n          draggingNodeKey: null,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n\n      _this.dragStartMousePosition = null;\n      _this.currentMouseOverDroppableNodeKey = null;\n    };\n\n    _this.triggerExpandActionExpand = function (e, treeNode) {\n      var _this$state5 = _this.state,\n          expandedKeys = _this$state5.expandedKeys,\n          flattenNodes = _this$state5.flattenNodes;\n      var expanded = treeNode.expanded,\n          key = treeNode.key;\n      var node = flattenNodes.filter(function (nodeItem) {\n        return nodeItem.key === key;\n      })[0];\n      var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(key, _this.getTreeNodeRequiredProps())), {}, {\n        data: node.data\n      }));\n\n      _this.setExpandedKeys(expanded ? arrDel(expandedKeys, key) : arrAdd(expandedKeys, key));\n\n      _this.onNodeExpand(e, eventNode);\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var _this$props3 = _this.props,\n          onClick = _this$props3.onClick,\n          expandAction = _this$props3.expandAction;\n\n      if (expandAction === 'click') {\n        _this.triggerExpandActionExpand(e, treeNode);\n      }\n\n      onClick === null || onClick === void 0 ? void 0 : onClick(e, treeNode);\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var _this$props4 = _this.props,\n          onDoubleClick = _this$props4.onDoubleClick,\n          expandAction = _this$props4.expandAction;\n\n      if (expandAction === 'doubleClick') {\n        _this.triggerExpandActionExpand(e, treeNode);\n      }\n\n      onDoubleClick === null || onDoubleClick === void 0 ? void 0 : onDoubleClick(e, treeNode);\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var _this$state6 = _this.state,\n          keyEntities = _this$state6.keyEntities,\n          fieldNames = _this$state6.fieldNames;\n      var _this$props5 = _this.props,\n          onSelect = _this$props5.onSelect,\n          multiple = _this$props5.multiple;\n      var selected = treeNode.selected;\n      var key = treeNode[fieldNames.key];\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      onSelect === null || onSelect === void 0 ? void 0 : onSelect(selectedKeys, {\n        event: 'select',\n        selected: targetSelected,\n        node: treeNode,\n        selectedNodes: selectedNodes,\n        nativeEvent: e.nativeEvent\n      });\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state7 = _this.state,\n          keyEntities = _this$state7.keyEntities,\n          oriCheckedKeys = _this$state7.checkedKeys,\n          oriHalfCheckedKeys = _this$state7.halfCheckedKeys;\n      var _this$props6 = _this.props,\n          checkStrictly = _this$props6.checkStrictly,\n          onCheck = _this$props6.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      onCheck === null || onCheck === void 0 ? void 0 : onCheck(checkedObj, eventObj);\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      var key = treeNode.key;\n      var loadPromise = new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props7 = _this.props,\n              loadData = _this$props7.loadData,\n              onLoad = _this$props7.onLoad;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            return null;\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var currentLoadedKeys = _this.state.loadedKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            onLoad === null || onLoad === void 0 ? void 0 : onLoad(newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState(function (prevState) {\n              return {\n                loadingKeys: arrDel(prevState.loadingKeys, key)\n              };\n            });\n\n            resolve();\n          }).catch(function (e) {\n            _this.setState(function (prevState) {\n              return {\n                loadingKeys: arrDel(prevState.loadingKeys, key)\n              };\n            }); // If exceed max retry times, we give up retry\n\n\n            _this.loadingRetryTimes[key] = (_this.loadingRetryTimes[key] || 0) + 1;\n\n            if (_this.loadingRetryTimes[key] >= MAX_RETRY_TIMES) {\n              var currentLoadedKeys = _this.state.loadedKeys;\n              warning(false, 'Retry for `loadData` many times but still failed. No more retry.');\n\n              _this.setUncontrolledState({\n                loadedKeys: arrAdd(currentLoadedKeys, key)\n              });\n\n              resolve();\n            }\n\n            reject(e);\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      }); // Not care warning if we ignore this\n\n      loadPromise.catch(function () {});\n      return loadPromise;\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n      onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter({\n        event: event,\n        node: node\n      });\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n      onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave({\n        event: event,\n        node: node\n      });\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      onFocus === null || onFocus === void 0 ? void 0 : onFocus.apply(void 0, args);\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      onBlur === null || onBlur === void 0 ? void 0 : onBlur.apply(void 0, args);\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state8 = _this.state,\n          expandedKeys = _this$state8.expandedKeys,\n          selectedKeys = _this$state8.selectedKeys,\n          loadedKeys = _this$state8.loadedKeys,\n          loadingKeys = _this$state8.loadingKeys,\n          checkedKeys = _this$state8.checkedKeys,\n          halfCheckedKeys = _this$state8.halfCheckedKeys,\n          dragOverNodeKey = _this$state8.dragOverNodeKey,\n          dropPosition = _this$state8.dropPosition,\n          keyEntities = _this$state8.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    };\n\n    _this.setExpandedKeys = function (expandedKeys) {\n      var _this$state9 = _this.state,\n          treeData = _this$state9.treeData,\n          fieldNames = _this$state9.fieldNames;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys, fieldNames);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var _this$state10 = _this.state,\n          listChanging = _this$state10.listChanging,\n          fieldNames = _this$state10.fieldNames;\n      var _this$props8 = _this.props,\n          onExpand = _this$props8.onExpand,\n          loadData = _this$props8.loadData;\n      var expanded = treeNode.expanded;\n      var key = treeNode[fieldNames.key]; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      _this.setExpandedKeys(expandedKeys);\n\n      onExpand === null || onExpand === void 0 ? void 0 : onExpand(expandedKeys, {\n        node: treeNode,\n        expanded: targetExpanded,\n        nativeEvent: e.nativeEvent\n      }); // Async Load data\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys, fieldNames);\n\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          }).catch(function () {\n            var currentExpandedKeys = _this.state.expandedKeys;\n            var expandedKeysToRestore = arrDel(currentExpandedKeys, key);\n\n            _this.setExpandedKeys(expandedKeysToRestore);\n          });\n        }\n      }\n    };\n\n    _this.onListChangeStart = function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    };\n\n    _this.onListChangeEnd = function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    };\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      onActiveChange === null || onActiveChange === void 0 ? void 0 : onActiveChange(newActiveKey);\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state11 = _this.state,\n          activeKey = _this$state11.activeKey,\n          flattenNodes = _this$state11.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state12 = _this.state,\n          flattenNodes = _this$state12.flattenNodes,\n          activeKey = _this$state12.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state13 = _this.state,\n          activeKey = _this$state13.activeKey,\n          expandedKeys = _this$state13.expandedKeys,\n          checkedKeys = _this$state13.checkedKeys,\n          fieldNames = _this$state13.fieldNames;\n      var _this$props9 = _this.props,\n          onKeyDown = _this$props9.onKeyDown,\n          checkable = _this$props9.checkable,\n          selectable = _this$props9.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data[fieldNames.children] || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);\n    };\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (!_this.destroyed) {\n        var needSync = false;\n        var allPassed = true;\n        var newState = {};\n        Object.keys(state).forEach(function (name) {\n          if (name in _this.props) {\n            allPassed = false;\n            return;\n          }\n\n          needSync = true;\n          newState[name] = state[name];\n        });\n\n        if (needSync && (!atomic || allPassed)) {\n          _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n        }\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.destroyed = false;\n      this.onUpdated();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onUpdated();\n    }\n  }, {\n    key: \"onUpdated\",\n    value: function onUpdated() {\n      var activeKey = this.props.activeKey;\n\n      if (activeKey !== undefined && activeKey !== this.state.activeKey) {\n        this.setState({\n          activeKey: activeKey\n        });\n\n        if (activeKey !== null) {\n          this.scrollTo({\n            key: activeKey\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('dragend', this.onWindowDragEnd);\n      this.destroyed = true;\n    }\n  }, {\n    key: \"resetDragState\",\n    value: function resetDragState() {\n      this.setState({\n        dragOverNodeKey: null,\n        dropPosition: null,\n        dropLevelOffset: null,\n        dropTargetKey: null,\n        dropContainerKey: null,\n        dropTargetPos: null,\n        dropAllowed: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state14 = this.state,\n          focused = _this$state14.focused,\n          flattenNodes = _this$state14.flattenNodes,\n          keyEntities = _this$state14.keyEntities,\n          draggingNodeKey = _this$state14.draggingNodeKey,\n          activeKey = _this$state14.activeKey,\n          dropLevelOffset = _this$state14.dropLevelOffset,\n          dropContainerKey = _this$state14.dropContainerKey,\n          dropTargetKey = _this$state14.dropTargetKey,\n          dropPosition = _this$state14.dropPosition,\n          dragOverNodeKey = _this$state14.dragOverNodeKey,\n          indent = _this$state14.indent;\n      var _this$props10 = this.props,\n          prefixCls = _this$props10.prefixCls,\n          className = _this$props10.className,\n          style = _this$props10.style,\n          showLine = _this$props10.showLine,\n          focusable = _this$props10.focusable,\n          _this$props10$tabInde = _this$props10.tabIndex,\n          tabIndex = _this$props10$tabInde === void 0 ? 0 : _this$props10$tabInde,\n          selectable = _this$props10.selectable,\n          showIcon = _this$props10.showIcon,\n          icon = _this$props10.icon,\n          switcherIcon = _this$props10.switcherIcon,\n          draggable = _this$props10.draggable,\n          checkable = _this$props10.checkable,\n          checkStrictly = _this$props10.checkStrictly,\n          disabled = _this$props10.disabled,\n          motion = _this$props10.motion,\n          loadData = _this$props10.loadData,\n          filterTreeNode = _this$props10.filterTreeNode,\n          height = _this$props10.height,\n          itemHeight = _this$props10.itemHeight,\n          virtual = _this$props10.virtual,\n          titleRender = _this$props10.titleRender,\n          dropIndicatorRender = _this$props10.dropIndicatorRender,\n          onContextMenu = _this$props10.onContextMenu,\n          onScroll = _this$props10.onScroll,\n          direction = _this$props10.direction,\n          rootClassName = _this$props10.rootClassName,\n          rootStyle = _this$props10.rootStyle;\n      var domProps = pickAttrs(this.props, {\n        aria: true,\n        data: true\n      }); // It's better move to hooks but we just simply keep here\n\n      var draggableConfig;\n\n      if (draggable) {\n        if (_typeof(draggable) === 'object') {\n          draggableConfig = draggable;\n        } else if (typeof draggable === 'function') {\n          draggableConfig = {\n            nodeDraggable: draggable\n          };\n        } else {\n          draggableConfig = {};\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggableConfig,\n          draggingNodeKey: draggingNodeKey,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          indent: indent,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          titleRender: titleRender,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        role: \"tree\",\n        className: classNames(prefixCls, className, rootClassName, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames)),\n        style: rootStyle\n      }, /*#__PURE__*/React.createElement(NodeList, _extends({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: draggingNodeKey !== null,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd,\n        onContextMenu: onContextMenu,\n        onScroll: onScroll\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // fieldNames\n\n      var fieldNames = prevState.fieldNames;\n\n      if (needSync('fieldNames')) {\n        fieldNames = fillFieldNames(props.fieldNames);\n        newState.fieldNames = fieldNames;\n      } // Check if `treeData` or `children` changed and save into the state.\n\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData, {\n          fieldNames: fieldNames\n        });\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData, fieldNames);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys, fieldNames);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  dropIndicatorRender: DropIndicator,\n  allowDrop: function allowDrop() {\n    return true;\n  },\n  expandAction: false\n};\nTree.TreeNode = TreeNode;\nexport default Tree;","map":{"version":3,"names":["_extends","_defineProperty","_typeof","_objectSpread","_toConsumableArray","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","React","KeyCode","warning","pickAttrs","classNames","TreeContext","getDragChildrenKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","flattenTreeData","convertTreeToData","convertDataToEntities","warningWithoutKey","convertNodePropsToEventData","getTreeNodeProps","fillFieldNames","NodeList","MOTION_KEY","MotionEntity","TreeNode","conductCheck","DropIndicator","MAX_RETRY_TIMES","Tree","_React$Component","_super","_this","_len","arguments","length","_args","Array","_key","call","apply","concat","destroyed","delayedDragEnterLogic","loadingRetryTimes","state","keyEntities","indent","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","draggingNodeKey","dragChildrenKeys","dropTargetKey","dropPosition","dropContainerKey","dropLevelOffset","dropTargetPos","dropAllowed","dragOverNodeKey","treeData","flattenNodes","focused","activeKey","listChanging","prevProps","fieldNames","dragStartMousePosition","dragNode","currentMouseOverDroppableNodeKey","listRef","createRef","onNodeDragStart","event","node","_this$state","onDragStart","props","eventKey","x","clientX","y","clientY","newExpandedKeys","setState","current","getIndentWidth","setExpandedKeys","window","addEventListener","onWindowDragEnd","onNodeDragEnter","_this$state2","_this$props","onDragEnter","onExpand","allowDrop","direction","_node$props","pos","_assertThisInitialize","resetDragState","_calcDropPosition","indexOf","Object","keys","forEach","key","clearTimeout","persist","setTimeout","entity","children","expanded","nativeEvent","onNodeDragOver","_this$state3","_this$props2","onDragOver","_assertThisInitialize2","_calcDropPosition2","onNodeDragLeave","currentTarget","contains","relatedTarget","onDragLeave","onNodeDragEnd","removeEventListener","onDragEnd","cleanDragState","onNodeDrop","_this$getActiveItem","outsideTree","undefined","_this$state4","onDrop","abstractDropNodeProps","getTreeNodeRequiredProps","active","getActiveItem","data","dropToChild","posArr","dropResult","dragNodesKeys","dropToGap","Number","triggerExpandActionExpand","e","treeNode","_this$state5","filter","nodeItem","eventNode","onNodeExpand","onNodeClick","_this$props3","onClick","expandAction","onNodeDoubleClick","_this$props4","onDoubleClick","onNodeSelect","_this$state6","_this$props5","onSelect","multiple","selected","targetSelected","selectedNodes","map","selectedKey","setUncontrolledState","onNodeCheck","checked","_this$state7","oriCheckedKeys","oriHalfCheckedKeys","_this$props6","checkStrictly","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","checkedKey","_conductCheck","_checkedKeys","_halfCheckedKeys","keySet","Set","delete","_conductCheck2","from","checkedNodesPositions","push","onNodeLoad","loadPromise","Promise","resolve","reject","_ref","_ref$loadedKeys","_ref$loadingKeys","_this$props7","loadData","onLoad","promise","then","currentLoadedKeys","newLoadedKeys","prevState","catch","onNodeMouseEnter","onMouseEnter","onNodeMouseLeave","onMouseLeave","onNodeContextMenu","onRightClick","preventDefault","onFocus","_len2","args","_key2","onBlur","onActiveChange","_len3","_key3","_this$state8","_this$state9","_this$state10","_this$props8","index","targetExpanded","newFlattenTreeData","currentExpandedKeys","expandedKeysToRestore","onListChangeStart","onListChangeEnd","newActiveKey","scrollTo","_this$state11","find","_ref2","offsetActiveKey","offset","_this$state12","findIndex","_ref3","item","onKeyDown","_this$state13","_this$props9","checkable","selectable","which","UP","DOWN","activeItem","treeNodeRequiredProps","expandable","isLeaf","LEFT","includes","parent","RIGHT","ENTER","SPACE","disabled","disableCheckbox","atomic","forceState","needSync","allPassed","newState","name","scroll","value","componentDidMount","onUpdated","componentDidUpdate","componentWillUnmount","render","_classNames","_this$state14","_this$props10","prefixCls","className","style","showLine","focusable","_this$props10$tabInde","tabIndex","showIcon","icon","switcherIcon","draggable","motion","filterTreeNode","height","itemHeight","virtual","titleRender","dropIndicatorRender","onContextMenu","onScroll","rootClassName","rootStyle","domProps","aria","draggableConfig","nodeDraggable","createElement","Provider","role","ref","dragging","getDerivedStateFromProps","entitiesMap","process","env","NODE_ENV","autoExpandParent","defaultExpandParent","defaultExpandAll","cloneKeyEntities","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component","defaultProps"],"sources":["C:/Users/Margu/OneDrive/Desktop/storefront/client/node_modules/rc-tree/es/Tree.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n// TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps, fillFieldNames } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\nvar MAX_RETRY_TIMES = 10;\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(_args));\n    _this.destroyed = false;\n    _this.delayedDragEnterLogic = void 0;\n    _this.loadingRetryTimes = {};\n    _this.state = {\n      keyEntities: {},\n      indent: null,\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      draggingNodeKey: null,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null,\n      fieldNames: fillFieldNames()\n    };\n    _this.dragStartMousePosition = null;\n    _this.dragNode = void 0;\n    _this.currentMouseOverDroppableNodeKey = null;\n    _this.listRef = /*#__PURE__*/React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      _this.dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n      _this.setState({\n        draggingNodeKey: eventKey,\n        dragChildrenKeys: getDragChildrenKeys(eventKey, keyEntities),\n        indent: _this.listRef.current.getIndentWidth()\n      });\n\n      _this.setExpandedKeys(newExpandedKeys);\n\n      window.addEventListener('dragend', _this.onWindowDragEnd);\n      onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n    };\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragChildrenKeys = _this$state2.dragChildrenKeys,\n          flattenNodes = _this$state2.flattenNodes,\n          indent = _this$state2.indent;\n      var _this$props = _this.props,\n          onDragEnter = _this$props.onDragEnter,\n          onExpand = _this$props.onExpand,\n          allowDrop = _this$props.allowDrop,\n          direction = _this$props.direction;\n      var _node$props = node.props,\n          pos = _node$props.pos,\n          eventKey = _node$props.eventKey;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize.dragNode; // record the key of node which is latest entered, used in dragleave event.\n\n\n      if (_this.currentMouseOverDroppableNodeKey !== eventKey) {\n        _this.currentMouseOverDroppableNodeKey = eventKey;\n      }\n\n      if (!dragNode) {\n        _this.resetDragState();\n\n        return;\n      }\n\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition.dropPosition,\n          dropLevelOffset = _calcDropPosition.dropLevelOffset,\n          dropTargetKey = _calcDropPosition.dropTargetKey,\n          dropContainerKey = _calcDropPosition.dropContainerKey,\n          dropTargetPos = _calcDropPosition.dropTargetPos,\n          dropAllowed = _calcDropPosition.dropAllowed,\n          dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n\n      if ( // don't allow drop inside its children\n      dragChildrenKeys.indexOf(dropTargetKey) !== -1 || // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        _this.resetDragState();\n\n        return;\n      } // Side effect for delay drag\n\n\n      if (!_this.delayedDragEnterLogic) {\n        _this.delayedDragEnterLogic = {};\n      }\n\n      Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(_this.delayedDragEnterLogic[key]);\n      });\n\n      if (dragNode.props.eventKey !== node.props.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        event.persist();\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (_this.state.draggingNodeKey === null) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[node.props.eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, node.props.eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n\n          onExpand === null || onExpand === void 0 ? void 0 : onExpand(newExpandedKeys, {\n            node: convertNodePropsToEventData(node.props),\n            expanded: true,\n            nativeEvent: event.nativeEvent\n          });\n        }, 800);\n      } // Skip if drag node is self\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        _this.resetDragState();\n\n        return;\n      } // Update drag over node and drag state\n\n\n      _this.setState({\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n\n      onDragEnter === null || onDragEnter === void 0 ? void 0 : onDragEnter({\n        event: event,\n        node: convertNodePropsToEventData(node.props),\n        expandedKeys: expandedKeys\n      });\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var _this$state3 = _this.state,\n          dragChildrenKeys = _this$state3.dragChildrenKeys,\n          flattenNodes = _this$state3.flattenNodes,\n          keyEntities = _this$state3.keyEntities,\n          expandedKeys = _this$state3.expandedKeys,\n          indent = _this$state3.indent;\n      var _this$props2 = _this.props,\n          onDragOver = _this$props2.onDragOver,\n          allowDrop = _this$props2.allowDrop,\n          direction = _this$props2.direction;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize2.dragNode;\n\n      if (!dragNode) {\n        return;\n      }\n\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition2.dropPosition,\n          dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n          dropTargetKey = _calcDropPosition2.dropTargetKey,\n          dropContainerKey = _calcDropPosition2.dropContainerKey,\n          dropAllowed = _calcDropPosition2.dropAllowed,\n          dropTargetPos = _calcDropPosition2.dropTargetPos,\n          dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n\n      if (dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      } // Update drag position\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(_this.state.dropPosition === null && _this.state.dropLevelOffset === null && _this.state.dropTargetKey === null && _this.state.dropContainerKey === null && _this.state.dropTargetPos === null && _this.state.dropAllowed === false && _this.state.dragOverNodeKey === null)) {\n          _this.resetDragState();\n        }\n      } else if (!(dropPosition === _this.state.dropPosition && dropLevelOffset === _this.state.dropLevelOffset && dropTargetKey === _this.state.dropTargetKey && dropContainerKey === _this.state.dropContainerKey && dropTargetPos === _this.state.dropTargetPos && dropAllowed === _this.state.dropAllowed && dragOverNodeKey === _this.state.dragOverNodeKey)) {\n        _this.setState({\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n\n      onDragOver === null || onDragOver === void 0 ? void 0 : onDragOver({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      // if it is outside the droppable area\n      // currentMouseOverDroppableNodeKey will be updated in dragenter event when into another droppable receiver.\n      if (_this.currentMouseOverDroppableNodeKey === node.props.eventKey && !event.currentTarget.contains(event.relatedTarget)) {\n        _this.resetDragState();\n\n        _this.currentMouseOverDroppableNodeKey = null;\n      }\n\n      var onDragLeave = _this.props.onDragLeave;\n      onDragLeave === null || onDragLeave === void 0 ? void 0 : onDragLeave({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n    };\n\n    _this.onWindowDragEnd = function (event) {\n      _this.onNodeDragEnd(event, null, true);\n\n      window.removeEventListener('dragend', _this.onWindowDragEnd);\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$getActiveItem;\n\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _this$state4 = _this.state,\n          dragChildrenKeys = _this$state4.dragChildrenKeys,\n          dropPosition = _this$state4.dropPosition,\n          dropTargetKey = _this$state4.dropTargetKey,\n          dropTargetPos = _this$state4.dropTargetPos,\n          dropAllowed = _this$state4.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = _this.props.onDrop;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (dropTargetKey === null) return;\n\n      var abstractDropNodeProps = _objectSpread(_objectSpread({}, getTreeNodeProps(dropTargetKey, _this.getTreeNodeRequiredProps())), {}, {\n        active: ((_this$getActiveItem = _this.getActiveItem()) === null || _this$getActiveItem === void 0 ? void 0 : _this$getActiveItem.key) === dropTargetKey,\n        data: _this.state.keyEntities[dropTargetKey].node\n      });\n\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. This is a bug of rc-tree. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: [_this.dragNode.props.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n\n      if (!outsideTree) {\n        onDrop === null || onDrop === void 0 ? void 0 : onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var draggingNodeKey = _this.state.draggingNodeKey;\n\n      if (draggingNodeKey !== null) {\n        _this.setState({\n          draggingNodeKey: null,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n\n      _this.dragStartMousePosition = null;\n      _this.currentMouseOverDroppableNodeKey = null;\n    };\n\n    _this.triggerExpandActionExpand = function (e, treeNode) {\n      var _this$state5 = _this.state,\n          expandedKeys = _this$state5.expandedKeys,\n          flattenNodes = _this$state5.flattenNodes;\n      var expanded = treeNode.expanded,\n          key = treeNode.key;\n      var node = flattenNodes.filter(function (nodeItem) {\n        return nodeItem.key === key;\n      })[0];\n      var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(key, _this.getTreeNodeRequiredProps())), {}, {\n        data: node.data\n      }));\n\n      _this.setExpandedKeys(expanded ? arrDel(expandedKeys, key) : arrAdd(expandedKeys, key));\n\n      _this.onNodeExpand(e, eventNode);\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var _this$props3 = _this.props,\n          onClick = _this$props3.onClick,\n          expandAction = _this$props3.expandAction;\n\n      if (expandAction === 'click') {\n        _this.triggerExpandActionExpand(e, treeNode);\n      }\n\n      onClick === null || onClick === void 0 ? void 0 : onClick(e, treeNode);\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var _this$props4 = _this.props,\n          onDoubleClick = _this$props4.onDoubleClick,\n          expandAction = _this$props4.expandAction;\n\n      if (expandAction === 'doubleClick') {\n        _this.triggerExpandActionExpand(e, treeNode);\n      }\n\n      onDoubleClick === null || onDoubleClick === void 0 ? void 0 : onDoubleClick(e, treeNode);\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var _this$state6 = _this.state,\n          keyEntities = _this$state6.keyEntities,\n          fieldNames = _this$state6.fieldNames;\n      var _this$props5 = _this.props,\n          onSelect = _this$props5.onSelect,\n          multiple = _this$props5.multiple;\n      var selected = treeNode.selected;\n      var key = treeNode[fieldNames.key];\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      onSelect === null || onSelect === void 0 ? void 0 : onSelect(selectedKeys, {\n        event: 'select',\n        selected: targetSelected,\n        node: treeNode,\n        selectedNodes: selectedNodes,\n        nativeEvent: e.nativeEvent\n      });\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state7 = _this.state,\n          keyEntities = _this$state7.keyEntities,\n          oriCheckedKeys = _this$state7.checkedKeys,\n          oriHalfCheckedKeys = _this$state7.halfCheckedKeys;\n      var _this$props6 = _this.props,\n          checkStrictly = _this$props6.checkStrictly,\n          onCheck = _this$props6.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      onCheck === null || onCheck === void 0 ? void 0 : onCheck(checkedObj, eventObj);\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      var key = treeNode.key;\n      var loadPromise = new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props7 = _this.props,\n              loadData = _this$props7.loadData,\n              onLoad = _this$props7.onLoad;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            return null;\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var currentLoadedKeys = _this.state.loadedKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            onLoad === null || onLoad === void 0 ? void 0 : onLoad(newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState(function (prevState) {\n              return {\n                loadingKeys: arrDel(prevState.loadingKeys, key)\n              };\n            });\n\n            resolve();\n          }).catch(function (e) {\n            _this.setState(function (prevState) {\n              return {\n                loadingKeys: arrDel(prevState.loadingKeys, key)\n              };\n            }); // If exceed max retry times, we give up retry\n\n\n            _this.loadingRetryTimes[key] = (_this.loadingRetryTimes[key] || 0) + 1;\n\n            if (_this.loadingRetryTimes[key] >= MAX_RETRY_TIMES) {\n              var currentLoadedKeys = _this.state.loadedKeys;\n              warning(false, 'Retry for `loadData` many times but still failed. No more retry.');\n\n              _this.setUncontrolledState({\n                loadedKeys: arrAdd(currentLoadedKeys, key)\n              });\n\n              resolve();\n            }\n\n            reject(e);\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      }); // Not care warning if we ignore this\n\n      loadPromise.catch(function () {});\n      return loadPromise;\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n      onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter({\n        event: event,\n        node: node\n      });\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n      onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave({\n        event: event,\n        node: node\n      });\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      onFocus === null || onFocus === void 0 ? void 0 : onFocus.apply(void 0, args);\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      onBlur === null || onBlur === void 0 ? void 0 : onBlur.apply(void 0, args);\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state8 = _this.state,\n          expandedKeys = _this$state8.expandedKeys,\n          selectedKeys = _this$state8.selectedKeys,\n          loadedKeys = _this$state8.loadedKeys,\n          loadingKeys = _this$state8.loadingKeys,\n          checkedKeys = _this$state8.checkedKeys,\n          halfCheckedKeys = _this$state8.halfCheckedKeys,\n          dragOverNodeKey = _this$state8.dragOverNodeKey,\n          dropPosition = _this$state8.dropPosition,\n          keyEntities = _this$state8.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    };\n\n    _this.setExpandedKeys = function (expandedKeys) {\n      var _this$state9 = _this.state,\n          treeData = _this$state9.treeData,\n          fieldNames = _this$state9.fieldNames;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys, fieldNames);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var _this$state10 = _this.state,\n          listChanging = _this$state10.listChanging,\n          fieldNames = _this$state10.fieldNames;\n      var _this$props8 = _this.props,\n          onExpand = _this$props8.onExpand,\n          loadData = _this$props8.loadData;\n      var expanded = treeNode.expanded;\n      var key = treeNode[fieldNames.key]; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      _this.setExpandedKeys(expandedKeys);\n\n      onExpand === null || onExpand === void 0 ? void 0 : onExpand(expandedKeys, {\n        node: treeNode,\n        expanded: targetExpanded,\n        nativeEvent: e.nativeEvent\n      }); // Async Load data\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys, fieldNames);\n\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          }).catch(function () {\n            var currentExpandedKeys = _this.state.expandedKeys;\n            var expandedKeysToRestore = arrDel(currentExpandedKeys, key);\n\n            _this.setExpandedKeys(expandedKeysToRestore);\n          });\n        }\n      }\n    };\n\n    _this.onListChangeStart = function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    };\n\n    _this.onListChangeEnd = function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    };\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      onActiveChange === null || onActiveChange === void 0 ? void 0 : onActiveChange(newActiveKey);\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state11 = _this.state,\n          activeKey = _this$state11.activeKey,\n          flattenNodes = _this$state11.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state12 = _this.state,\n          flattenNodes = _this$state12.flattenNodes,\n          activeKey = _this$state12.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state13 = _this.state,\n          activeKey = _this$state13.activeKey,\n          expandedKeys = _this$state13.expandedKeys,\n          checkedKeys = _this$state13.checkedKeys,\n          fieldNames = _this$state13.fieldNames;\n      var _this$props9 = _this.props,\n          onKeyDown = _this$props9.onKeyDown,\n          checkable = _this$props9.checkable,\n          selectable = _this$props9.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data[fieldNames.children] || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);\n    };\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (!_this.destroyed) {\n        var needSync = false;\n        var allPassed = true;\n        var newState = {};\n        Object.keys(state).forEach(function (name) {\n          if (name in _this.props) {\n            allPassed = false;\n            return;\n          }\n\n          needSync = true;\n          newState[name] = state[name];\n        });\n\n        if (needSync && (!atomic || allPassed)) {\n          _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n        }\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.destroyed = false;\n      this.onUpdated();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onUpdated();\n    }\n  }, {\n    key: \"onUpdated\",\n    value: function onUpdated() {\n      var activeKey = this.props.activeKey;\n\n      if (activeKey !== undefined && activeKey !== this.state.activeKey) {\n        this.setState({\n          activeKey: activeKey\n        });\n\n        if (activeKey !== null) {\n          this.scrollTo({\n            key: activeKey\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('dragend', this.onWindowDragEnd);\n      this.destroyed = true;\n    }\n  }, {\n    key: \"resetDragState\",\n    value: function resetDragState() {\n      this.setState({\n        dragOverNodeKey: null,\n        dropPosition: null,\n        dropLevelOffset: null,\n        dropTargetKey: null,\n        dropContainerKey: null,\n        dropTargetPos: null,\n        dropAllowed: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state14 = this.state,\n          focused = _this$state14.focused,\n          flattenNodes = _this$state14.flattenNodes,\n          keyEntities = _this$state14.keyEntities,\n          draggingNodeKey = _this$state14.draggingNodeKey,\n          activeKey = _this$state14.activeKey,\n          dropLevelOffset = _this$state14.dropLevelOffset,\n          dropContainerKey = _this$state14.dropContainerKey,\n          dropTargetKey = _this$state14.dropTargetKey,\n          dropPosition = _this$state14.dropPosition,\n          dragOverNodeKey = _this$state14.dragOverNodeKey,\n          indent = _this$state14.indent;\n      var _this$props10 = this.props,\n          prefixCls = _this$props10.prefixCls,\n          className = _this$props10.className,\n          style = _this$props10.style,\n          showLine = _this$props10.showLine,\n          focusable = _this$props10.focusable,\n          _this$props10$tabInde = _this$props10.tabIndex,\n          tabIndex = _this$props10$tabInde === void 0 ? 0 : _this$props10$tabInde,\n          selectable = _this$props10.selectable,\n          showIcon = _this$props10.showIcon,\n          icon = _this$props10.icon,\n          switcherIcon = _this$props10.switcherIcon,\n          draggable = _this$props10.draggable,\n          checkable = _this$props10.checkable,\n          checkStrictly = _this$props10.checkStrictly,\n          disabled = _this$props10.disabled,\n          motion = _this$props10.motion,\n          loadData = _this$props10.loadData,\n          filterTreeNode = _this$props10.filterTreeNode,\n          height = _this$props10.height,\n          itemHeight = _this$props10.itemHeight,\n          virtual = _this$props10.virtual,\n          titleRender = _this$props10.titleRender,\n          dropIndicatorRender = _this$props10.dropIndicatorRender,\n          onContextMenu = _this$props10.onContextMenu,\n          onScroll = _this$props10.onScroll,\n          direction = _this$props10.direction,\n          rootClassName = _this$props10.rootClassName,\n          rootStyle = _this$props10.rootStyle;\n      var domProps = pickAttrs(this.props, {\n        aria: true,\n        data: true\n      }); // It's better move to hooks but we just simply keep here\n\n      var draggableConfig;\n\n      if (draggable) {\n        if (_typeof(draggable) === 'object') {\n          draggableConfig = draggable;\n        } else if (typeof draggable === 'function') {\n          draggableConfig = {\n            nodeDraggable: draggable\n          };\n        } else {\n          draggableConfig = {};\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggableConfig,\n          draggingNodeKey: draggingNodeKey,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          indent: indent,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          titleRender: titleRender,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        role: \"tree\",\n        className: classNames(prefixCls, className, rootClassName, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames)),\n        style: rootStyle\n      }, /*#__PURE__*/React.createElement(NodeList, _extends({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: draggingNodeKey !== null,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd,\n        onContextMenu: onContextMenu,\n        onScroll: onScroll\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // fieldNames\n\n      var fieldNames = prevState.fieldNames;\n\n      if (needSync('fieldNames')) {\n        fieldNames = fillFieldNames(props.fieldNames);\n        newState.fieldNames = fieldNames;\n      } // Check if `treeData` or `children` changed and save into the state.\n\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData, {\n          fieldNames: fieldNames\n        });\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData, fieldNames);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys, fieldNames);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  dropIndicatorRender: DropIndicator,\n  allowDrop: function allowDrop() {\n    return true;\n  },\n  expandAction: false\n};\nTree.TreeNode = TreeNode;\nexport default Tree;"],"mappings":"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"},"metadata":{},"sourceType":"module"}